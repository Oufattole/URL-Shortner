#!/usr/bin/env perl
use Mojolicious::Lite;

use Mojo::Pg;
use Time::Piece;
use Time::Seconds;

use List::Util qw(shuffle);

# tiny.conf
# { pg => 'postgresql://a:b@c/d', };
# Get a quick and free tiny hosted Postgresql database at
#   http://elephantsql.com
plugin 'Config';

helper pg => sub { state $pg = Mojo::Pg->new(shift->config('pg')) };
app->pg->migrations->from_data->migrate;

any '/' => sub {
  my $c = shift;
  
  #Expiration Date set with the expiration box
  my $expiration = $c->param('expiration');
  
  # Here is the checkbox variable to set an expiration date for the 
  my $checkbox = $c->param('expires'); # IF CHECK THE VALUE IS "ON"

  # Check if parameters have been submitted
  # and if not show the errors
  my $v = $c->validation;
  return $c->render unless $v->has_data;
  $v->required('url')->like(qr/^https?:\/\//);
  return $c->render if $v->has_error;

  my $tiny;
  # If someone already submitted the same URL, use the same tiny code
  unless ( $tiny = $c->pg->db->query('select * from tiny where url = ?', $v->param('url'))->hash ) {
    # Otherwise, store the new URL and generate a tiny code based on the shuffling of the URL
    #If the expiration checkbox was checked on - expiration date sent to database 1 week from current date in mdy format
    if($checkbox eq "on" && $expiration ne ""){
    	my $current = localtime;
    	$current = $current->ymd;
    	#Checking if their selected date is after the current date.
    	if($expiration lt $current){
    		$c->flash(message => "You tried to set an invalid expiration date (Prior to today). Try again.");
    		$c->redirect_to('index');
    	}
    	else{
	    	$tiny = $c->pg->db->query('insert into tiny (id, url, expires) values (left(md5(?), 6), ?, ?) returning *',
		    join('', shuffle(split //, $v->param('url'))),
		    $v->param('url'), $expiration,
		    )->hash;	
    	}
    }
    elsif($checkbox eq "on" && $expiration eq ""){
    	$c->flash(message => "No date selected for expiration. Try again.")->redirect_to('index');
    }
    #If the expiration checkbox was checked off - expiration date sent to database as NULL
    else {
      $tiny = $c->pg->db->query('insert into tiny (id, url, expires) values (left(md5(?), 6), ?, NULL) returning *',
      join('', shuffle(split //, $v->param('url'))),
      $v->param('url'),
      )->hash;
    }
    
  }
  app->log->info(sprintf("Add: %s => %s", $tiny->{id}, $tiny->{url}));
  # Show the same index page, but show the tiny code just created
  $c->flash($tiny)->redirect_to('index');
} => 'index';

get '/:id' => sub {
  my $c = shift;
  my $current = localtime->mdy;
  # Redirect to the URL on file for the code provided, 404 otherwise
  my $tiny = $c->pg->db->query('select url from tiny where id = ? and (expires >= ? or expires is null)', $c->param('id'), $current)->hash;     
  if($tiny eq ""){
  	$c->flash(message => "We are sorry, this tiny URL has expired");
  	$c->redirect_to('index');
  }
  else{
  	app->log->info(sprintf("Redirect: %s => %s", $c->param('id'), $tiny->{url}));
	return $c->reply->not_found unless $tiny->{url};
	$c->redirect_to($tiny->{url});
  }
} => 'tiny';

app->start or exit unless app->mode =~ /^test/;

__DATA__
@@ migrations
-- 1 up
create table tiny (id text, url text, expires date);
create unique index on tiny (id);
-- 1 down
drop table tiny;

@@ index.html.ep
% layout 'default';
% title 'Welcome';

% if ( my $message = flash 'message') {
  Message: <%= flash 'message' %><br>	
% }
% if ( my $expirationdate = flash 'expirationdate') {
  ExpirationDate: <%= flash 'expirationdate' %><br>	
% }
% if ( my $current = flash 'current') {
  Current: <%= flash 'current' %><br>	
% }
% if ( my $id = flash 'id' ) {
Your Tiny URL is: <%= link_to url_for('tiny', {id => $id})->to_abs => begin %><%= url_for('tiny', {id => $id})->to_abs %><%= end %><br>
Which maps to: <%= flash 'url' %><br>
% if ( my $exp = flash 'expires') {
  Expiration: <%= flash 'expires' %><br>	
% }
% else {
  Expiration: No Expiration<br>
% }
% }
%= form_for 'index', (method => 'POST') => begin
%= label_for url => 'New Tiny URL (must be a valid URL)'
<br>
%= text_field 'url', placeholder => 'Enter your URL here'
%= label_for textbox => 'Expire?'
%= check_box 'expires'
%= label_for textbox => 'Day?'
<input type="date" name="expiration">
<br>
%= submit_button
%= end

@@ layouts/default.html.ep
<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <style>
      label.field-with-error { color: #dd7e5e }
      input.field-with-error { background-color: #fd9e7e }
    </style>
  </head>
  <body><%= content %></body>
</html>
